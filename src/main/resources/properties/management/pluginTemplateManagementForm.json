{
    "className": "org.joget.apps.form.model.Form",
    "properties": {
        "id": "pluginTemplateForm",
        "loadBinder": {
            "className": ""
        },
        "description": "",
        "tableName": "pluginTemplateForm",
        "name": "pluginTemplateForm",
        "storeBinder": {
            "className": ""
        }
    },
    "elements": [
        {
            "elements": [
                {
                    "elements": [
                        {
                            "className": "org.joget.apps.form.lib.TextField",
                            "properties": {
                                "id": "id",
                                "readonlyLabel": "",
                                "workflowVariable": "",
                                "storeNumeric": "",
                                "maxlength": "",
                                "style": "",
                                "encryption": "",
                                "placeholder": "",
                                "validator": {
                                    "className": "org.joget.apps.form.lib.DefaultValidator",
                                    "properties": {
                                        "message": "",
                                        "mandatory": "true",
                                        "custom-regex": "",
                                        "type": ""
                                    }
                                },
                                "value": "",
                                "label": "@@org.joget.marketplace.pluginTemplateManagement.templateId@@",
                                "readonly": "",
                                "size": ""
                            }
                        },{
                            "className": "org.joget.apps.form.lib.TextField",
                            "properties": {
                                "id": "name",
                                "readonlyLabel": "",
                                "workflowVariable": "",
                                "storeNumeric": "",
                                "maxlength": "",
                                "style": "",
                                "encryption": "",
                                "placeholder": "",
                                "validator": {
                                    "className": "org.joget.apps.form.lib.DefaultValidator",
                                    "properties": {
                                        "message": "",
                                        "mandatory": "true",
                                        "custom-regex": "",
                                        "type": ""
                                    }
                                },
                                "value": "",
                                "label": "@@org.joget.marketplace.pluginTemplateManagement.templateLabel@@",
                                "readonly": "",
                                "size": ""
                            }
                        },{
                            "className": "org.joget.apps.form.lib.TextArea",
                            "properties": {
                                "id": "description",
                                "readonlyLabel": "",
                                "workflowVariable": "",
                                "storeNumeric": "",
                                "maxlength": "",
                                "style": "",
                                "encryption": "",
                                "placeholder": "",
                                "validator": {
                                    "className": "",
                                    "properties": {}
                                },
                                "placeholder": "",
                                "cols": "40",
                                "rows": "5",
                                "value": "",
                                "label": "@@org.joget.marketplace.pluginTemplateManagement.templateDescription@@",
                                "readonly": "",
                                "size": ""
                            }
                        },
                        {
                            "className": "org.joget.apps.form.lib.SelectBox",
                            "properties": {
                                "id": "pluginClass",
                                "readonlyLabel": "",
                                "workflowVariable": "",
                                "optionsBinder": {
                                    "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                                    "properties": {
                                        "useAjax": "",
                                        "script": "import java.util.Collection;\nimport org.springframework.util.ClassUtils;\nimport org.joget.plugin.base.Plugin;\nimport org.joget.plugin.base.PluginManager;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.form.service.FormUtil;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\n\nString[] supportedTypes = new String[] {\"org.joget.apps.datalist.model.DataListColumnFormat\", \"org.joget.plugin.base.ApplicationPlugin\", \"org.joget.apps.form.model.FormPermission\", \"org.joget.apps.userview.model.UserviewPermission\", \"org.joget.apps.form.model.FormLoadOptionsBinder\",\"org.joget.apps.form.model.Validator\"};\n\nFormRowSet rows = new FormRowSet();\nFormRow emptyRow = new FormRow();\nemptyRow.setProperty(FormUtil.PROPERTY_VALUE, \"\");\nemptyRow.setProperty(FormUtil.PROPERTY_LABEL, \"\");\nemptyRow.setProperty(FormUtil.PROPERTY_GROUPING, \"\");\nrows.add(emptyRow);\n\nPluginManager pluginManager = (PluginManager) AppUtil.getApplicationContext().getBean(\"pluginManager\");\nMap pluginType = PluginManager.getPluginType();\n\n//for (String c : pluginType.keySet()) {\nfor (String c : supportedTypes) {\n    Class clazz;\n    if (pluginManager.getCustomPluginInterface(c) != null) {\n        clazz = pluginManager.getCustomPluginInterface(c).getClassObj();\n    } else {\n        clazz = Class.forName(c);\n    }\n    \n    emptyRow = new FormRow();\n    emptyRow.setProperty(FormUtil.PROPERTY_VALUE, \"\");\n    emptyRow.setProperty(FormUtil.PROPERTY_LABEL, \"--- \" + pluginType.get(c) + \" ---\");\n    emptyRow.setProperty(FormUtil.PROPERTY_GROUPING, \"\");\n    rows.add(emptyRow);\n    \n    Collection list = pluginManager.list(clazz);\n    for (Plugin plugin : list) {\n        FormRow r = new FormRow();\n        r.setProperty(FormUtil.PROPERTY_VALUE, ClassUtils.getUserClass(plugin).getName());\n        r.setProperty(FormUtil.PROPERTY_LABEL, plugin.getI18nLabel());\n        rows.add(r);\n    }\n}\n\nreturn rows;               "
                                    }
                                },
                                "validator": {
                                    "className": "org.joget.apps.form.lib.DefaultValidator",
                                    "properties": {
                                        "message": "",
                                        "mandatory": "true",
                                        "custom-regex": "",
                                        "type": ""
                                    }
                                },
                                "value": "",
                                "controlField": "",
                                "label": "@@org.joget.marketplace.pluginTemplateManagement.plugin@@",
                                "multiple": "",
                                "readonly": "",
                                "options": [],
                                "size": ""
                            }
                        },
                        {
                            "className": "org.joget.apps.form.lib.HiddenField",
                            "properties": {
                                "id": "pluginProperties",
                                "workflowVariable": "",
                                "value": "",
                                "useDefaultWhenEmpty": ""
                            }
                        },
                        {
                            "className": "org.joget.apps.form.lib.CustomHTML",
                            "properties": {
                                "id": "field6",
                                "autoPopulate": "",
                                "value": "<a id=\"configPlugin\" class=\"button btn\">@@org.joget.marketplace.pluginTemplateManagement.configPlugin@@</a>\n<script>\nwindow.updateProps = function(props) {\n    FormUtil.getField(\"pluginProperties\").val(props);\n    JPopup.hide(\"pluginTemplateMenu\");\n}\n  var url = '%s';\n    function configPlugin() {\n        var pluginClass = FormUtil.getValue(\"pluginClass\");\n        var pluginProp = FormUtil.getValue(\"pluginProperties\");\n        if (pluginClass !== \"\") {\n            JPopup.show(\"pluginTemplateMenu\", url, {\n                \"pluginClass\": pluginClass, \n                \"pluginProp\": pluginProp, \n                \"action\":\"config\"\n            }, '', '90%%', '90%%', 'post');\n        } else {\n            alert(\"@@org.joget.marketplace.pluginTemplateManagement.pleaseSelect@@\");\n        }\n    }\n    $(document).ready(function(){\n        $(\"#configPlugin\").on(\"click\", function(){\n            configPlugin();\n            return false;\n        })\n    });\n</script>",
                                "label": " "
                            }
                        }
                    ],
                    "className": "org.joget.apps.form.model.Column",
                    "properties": {
                        "width": "100%%"
                    }
                }
            ],
            "className": "org.joget.apps.form.model.Section",
            "properties": {
                "id": "section1",
                "loadBinder": {
                    "className": "",
                    "properties": {}
                },
                "storeBinder": {
                    "className": "",
                    "properties": {}
                },
                "label": "",
                "permission": {
                    "className": "",
                    "properties": {}
                }
            }
        }
    ]
}